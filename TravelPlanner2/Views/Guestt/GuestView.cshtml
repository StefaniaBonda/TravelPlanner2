@model List<TravelPlanner2.Controllers.GuesttController.TripViewModel>
@{
    ViewBag.Title = "Explore Trips";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<div class="container mt-4">
    <h2 class="mb-4">Explore Trips</h2>

    <div class="row g-4">
        @for (int i = 0; i < Model.Count; i++)
        {
            var trip = Model[i];
            var mapId = $"map{i}";
            var firstLat = trip.Objectives.FirstOrDefault()?.Latitude ?? 45;
            var firstLng = trip.Objectives.FirstOrDefault()?.Longitude ?? 25;

            <div class="col-md-4">
                <div class="card h-100 shadow-sm border-0">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-primary">@trip.Name</h5>

                        <p class="card-subtitle mb-2 text-muted">
                            <strong>Published by:</strong> @trip.PublishedBy
                            @if (trip.PublishedDate.HasValue)
                            {
                                <span class="text-muted">on @trip.PublishedDate.Value.ToString("dd MMM yyyy")</span>
                            }
                        </p>

                        <p><strong>Cities:</strong> @string.Join(", ", trip.CityNames.Take(3))</p>
                        <p class="card-text">@trip.Description</p>
                        <p><strong>Km Range:</strong> @trip.KmRange km</p>

                        <ul class="ps-3 mt-2">
                            @for (int j = 0; j < trip.Objectives.Count; j++)
                            {
                                <li>@(j + 1). @trip.Objectives[j].Name</li>
                            }
                        </ul>

                        <div id="@mapId" class="rounded border mt-3" style="height: 200px;"></div>
                    </div>
                </div>
            </div>

            <script>
                window.addEventListener("load", function () {
                    const map = L.map("@mapId").setView([@firstLat, @firstLng], 6);
                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '&copy; OpenStreetMap contributors'
                    }).addTo(map);
                    const points = [];

                    @for (int j = 0; j < trip.Objectives.Count; j++)
                    {
                        var obj = trip.Objectives[j];
                        <text>
                            var marker = L.marker([@obj.Latitude, @obj.Longitude]).addTo(map).bindPopup("@(j + 1). @obj.Name");
                            points.push([@obj.Latitude, @obj.Longitude]);
                        </text>
                    }

                    if (points.length > 1) {
                        L.polyline(points, { color: 'blue', weight: 3 }).addTo(map);
                    }
                    if (points.length > 0) {
                        map.fitBounds(points);
                    }
                });
            </script>
        }
    </div>
</div>
@section Styles {
    <style>
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            background-color: #fdfaf3;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-image: url('/Content/planes-bgg.png');
            background-size: cover;
            background-repeat: repeat;
            background-attachment: fixed;
        }
        </style>
    }
