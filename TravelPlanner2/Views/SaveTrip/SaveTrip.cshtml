@model TravelPlanner2.Controllers.SaveTripController.SaveTripViewModel
@{
    ViewBag.Title = "Save Trip Details";
}

<h2>Save Trip Details</h2>

<div class="row">
    <div class="col-md-6">
        @* Formularul pentru nume, descriere și favorite *@
        @using (Html.BeginForm("SaveTrip", "SaveTrip", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Enter Trip Details</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.TripId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-2">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 3 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-check mt-3">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsFavorite)
                            @Html.LabelFor(model => model.IsFavorite, new { @class = "form-check-label" })
                        </div>
                    </div>
                </div>

                <div class="form-group mt-3">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-6">
        @* Harta *@
        <div id="map" style="height: 400px;"></div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

    <script type="text/javascript">
        var map = L.map('map').setView([45.9432, 24.9668], 6); // Setare inițială a vederii
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Apel AJAX către TripsController pentru a obține locațiile trip-ului curent
        $.ajax({
            url: '/Trips/GetTripLocations', //Folosim endpoint-ul existent
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                if (data && data.length > 0) {
                    var bounds = [];
                    //Iterăm prin locații și le adăugăm pe hartă
                    for (var i = 0; i < data.length; i++) {
                        var loc = data[i];
                        var marker = L.marker([loc.Latitude, loc.Longitude]).addTo(map);
                        marker.bindPopup("<b>" + loc.Name + "</b><br>" + loc.Description).openPopup();
                        bounds.push([loc.Latitude, loc.Longitude]);
                    }
                    //Ajustăm vederea hărții
                    if (bounds.length > 0) {
                        map.fitBounds(bounds, { padding: [50, 50] });
                    }
                } else {
                    console.log("Nu au fost găsite locații pentru acest trip.");
                    // Poți afișa un mesaj utilizatorului
                }
            },
            error: function (error) {
                console.error("Eroare la obținerea locațiilor trip-ului:", error);
            }
        });
    </script>
}