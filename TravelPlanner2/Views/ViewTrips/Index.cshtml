@model List<TravelPlanner2.Controllers.ViewTripsController.TripViewModel>
@{
    ViewBag.Title = "Your Trips";
    Layout = "~/Views/Shared/LoggedInLayout.cshtml";
}

<!-- Bootstrap & Leaflet -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<style>
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
        background-color: #fdfaf3;
        background-image: url('/Content/planes-bgg.png');
        background-size: cover;
        background-repeat: repeat;
        background-attachment: fixed;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    h2 {
        text-align: center;
        margin: 30px 0 10px;
        color: #0a2342;
        font-size: 2em;
    }

    .trip-card {
        transition: transform 0.2s;
    }

        .trip-card:hover {
            transform: scale(1.02);
        }

    .card {
        border-radius: 16px !important;
        background-color: rgba(255, 255, 255, 0.95);
    }

    .card-body {
        display: flex;
        flex-direction: column;
    }

    .btn-primary {
        border-radius: 25px;
        padding: 8px 16px;
    }

    select.form-select {
        max-width: 300px;
        margin: 0 auto 20px;
        display: block;
    }
</style>

<div class="container mt-4">
    <h2>Your Trips</h2>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success text-center">@TempData["Success"]</div>
    }

    <div class="mb-3">
        <label for="cityFilter" class="form-label">Filter by City:</label>
        <select id="cityFilter" class="form-select" onchange="filterTrips()">
            <option value="">All</option>
            @foreach (var city in Model.SelectMany(t => t.CityNames).Distinct())
            {
                <option value="@city">@city</option>
            }
        </select>
    </div>

    <div class="row g-4" id="tripContainer">
        @for (int i = 0; i < Model.Count; i++)
        {
            var trip = Model[i];
            var mapId = $"map{i}";
            var firstLat = trip.Objectives.FirstOrDefault()?.Latitude ?? 45;
            var firstLng = trip.Objectives.FirstOrDefault()?.Longitude ?? 25;

            <div class="col-md-4 trip-card" data-cities="@string.Join(",", trip.CityNames)" data-km="@trip.KmRange">
                <div class="card h-100 shadow border-0">
                    <div class="card-body">
                        <h5 class="card-title text-primary">@trip.Name</h5>

                        @if (trip.CityNames.Any())
                        {
                            <p class="card-subtitle mb-2 text-muted">
                                <strong>Cities:</strong> @string.Join(", ", trip.CityNames.Take(3))
                            </p>
                        }

                        <p class="card-text">@trip.Description</p>
                        <p><strong>Km Range:</strong> @trip.KmRange km</p>

                        @if (trip.Objectives.Any())
                        {
                            <p class="mt-3 mb-1"><strong>Objectives:</strong></p>
                            <ul class="ps-3">
                                @for (int j = 0; j < trip.Objectives.Count; j++)
                                {
                                    <li>@(j + 1). @trip.Objectives[j].Name</li>
                                }
                            </ul>
                        }

                        <div id="@mapId" class="rounded border mt-3" style="height: 200px;"></div>

                        <div class="mt-auto pt-2">
                            <p>
                                <strong>Status:</strong>
                                @if (trip.Published)
                                {
                                    <span class="badge bg-success">Published</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Unpublished</span>
                                }
                            </p>

                            @if (!trip.Published)
                            {
                                using (Html.BeginForm("RequestPublish", "ViewTrips", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("tripId", trip.TripId)
                                    <button type="submit" class="btn btn-sm btn-primary">Request Publish</button>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <script>
                window.addEventListener("load", function () {
                    const map = L.map("@mapId").setView([@firstLat, @firstLng], 6);
                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: '&copy; OpenStreetMap contributors'
                    }).addTo(map);

                    const points = [];
                    @for (int j = 0; j < trip.Objectives.Count; j++)
                    {
                        var obj = trip.Objectives[j];
                        <text>
                            var marker = L.marker([@obj.Latitude, @obj.Longitude]).addTo(map).bindPopup("@(j + 1). @obj.Name");
                            points.push([@obj.Latitude, @obj.Longitude]);
                        </text>
                    }
                    if (points.length > 1) {
                        L.polyline(points, { color: 'blue', weight: 3 }).addTo(map);
                    }
                    if (points.length > 0) {
                        map.fitBounds(points);
                    }
                });
            </script>
        }
    </div>
</div>

<script>
    function filterTrips() {
        const selectedCity = document.getElementById("cityFilter").value.toLowerCase();
        document.querySelectorAll(".trip-card").forEach(card => {
            const cities = card.getAttribute("data-cities").toLowerCase();
            card.style.display = selectedCity === "" || cities.includes(selectedCity) ? "block" : "none";
        });
    }
</script>